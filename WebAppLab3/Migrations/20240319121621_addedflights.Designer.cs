// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppLab3.Data;

#nullable disable

namespace WebAppLab3.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240319121621_addedflights")]
    partial class addedflights
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.28");

            modelBuilder.Entity("WebAppLab3.Models.ContactUsEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ContactUsEntries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "test@gmail.com",
                            Message = "Hello",
                            Timestamp = new DateTime(2024, 3, 19, 14, 16, 20, 906, DateTimeKind.Local).AddTicks(3580)
                        });
                });

            modelBuilder.Entity("WebAppLab3.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Explore the romantic charm of the City of Lights, visit iconic landmarks like the Eiffel Tower, and indulge in exquisite French cuisine.",
                            ImagePath = "/images/paris.jpg",
                            Name = "Paris"
                        });
                });

            modelBuilder.Entity("WebAppLab3.Models.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FlightId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBooked")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Seats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A1",
                            Price = 250
                        },
                        new
                        {
                            Id = 2,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A2",
                            Price = 250
                        },
                        new
                        {
                            Id = 3,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A3",
                            Price = 250
                        },
                        new
                        {
                            Id = 4,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A4",
                            Price = 250
                        },
                        new
                        {
                            Id = 5,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A5",
                            Price = 250
                        },
                        new
                        {
                            Id = 6,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A6",
                            Price = 250
                        },
                        new
                        {
                            Id = 7,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A7",
                            Price = 250
                        },
                        new
                        {
                            Id = 8,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A8",
                            Price = 250
                        },
                        new
                        {
                            Id = 9,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A9",
                            Price = 250
                        },
                        new
                        {
                            Id = 10,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A10",
                            Price = 250
                        },
                        new
                        {
                            Id = 11,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A11",
                            Price = 250
                        },
                        new
                        {
                            Id = 12,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A12",
                            Price = 250
                        },
                        new
                        {
                            Id = 13,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A13",
                            Price = 250
                        },
                        new
                        {
                            Id = 14,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A14",
                            Price = 250
                        },
                        new
                        {
                            Id = 15,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A15",
                            Price = 250
                        },
                        new
                        {
                            Id = 16,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A16",
                            Price = 250
                        },
                        new
                        {
                            Id = 17,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A17",
                            Price = 250
                        },
                        new
                        {
                            Id = 18,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A18",
                            Price = 250
                        },
                        new
                        {
                            Id = 19,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A19",
                            Price = 250
                        },
                        new
                        {
                            Id = 20,
                            FlightId = 1,
                            IsBooked = false,
                            Number = "A20",
                            Price = 250
                        });
                });

            modelBuilder.Entity("WebAppLab3.Models.Seat", b =>
                {
                    b.HasOne("WebAppLab3.Models.Flight", "Flight")
                        .WithMany("Seats")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("WebAppLab3.Models.Flight", b =>
                {
                    b.Navigation("Seats");
                });
#pragma warning restore 612, 618
        }
    }
}
